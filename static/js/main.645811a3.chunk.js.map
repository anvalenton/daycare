{"version":3,"sources":["Employee.js","ShiftBlock.js","Room.js","actionCreators.js","DayHeaders2.js","AllRooms.js","Clock.js","App.js","reportWebVitals.js","rootReducer.js","index.js"],"names":["Employee","name","group","className","ShiftBlock","colorNum","startTime","endTime","colorKeys","workersToDisplay","useSelector","store","data","shallowEqual","filter","worker","working","length","map","uuid","Room","roomNum","aShift","bShift","roomData","lastShiftGroup","st","yesterdayShift","numKeys","A","B","C","D","hours","rows","i","push","am","pm","notes","getSchedule","requestedPayload","dispatch","a","axios","post","response","arrayFromRes","withinHours","withinBusinessHours","console","log","type","isDaycareOpen","gotError","error","Error","date","Date","day","getDay","isWithinHours","hour","getHours","minutes","getMinutes","DayHeaders2","dayElem","month","payload","AllRooms","callToStore","useDispatch","intervalIDFromStore","state","intervalID","isOpenFromStore","useEffect","startIntervalID","setIntervalAsync","clearInterval","clearIntervalAsync","Clock","timeNow","moment","format","useState","clock","updateClock","timerID","setInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","rootReducer","action","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.645811a3.chunk.js","sourcesContent":["import './Employee.css';\nimport React from \"react\";\n\n\n\nconst Employee = ({name, group}) => {\n    \n   \n\nreturn (\n\n\n<div className={`employeename-subcontainer ${group}`} >\n\n    <span className='employeename'>{name}</span>\n\n</div>\n\n\n)\n\n};\n\nexport default Employee;","// import './Employee.css';\nimport React from \"react\";\nimport { useSelector, shallowEqual } from 'react-redux'\nimport Employee from \"./Employee\";\nimport \"./ShiftBlock.css\";\nimport uuid from 'react-uuid';\n\nconst ShiftBlock = ({colorNum, startTime, endTime, className}) => {\n    \n//refers to shift designations\nconst colorKeys = {\n    1: 'red', 2: 'blue', 3: 'yellow', 4: 'green'\n}\n\n//shallowEqual compares store value to previous store value\nlet updatedShifts = useSelector(store => store.data, shallowEqual);\n\n//compare group numbers on data to passed group number, if its a match and emp is working, render that <employee>\nlet workersToDisplay = updatedShifts.filter((worker) => {\n    return (worker.group === colorNum) && worker.working}); \n\n//if array is empty at least render \"none\" to show no available employee for that shift\nif (workersToDisplay.length === 0) {\n    workersToDisplay = [{name: 'None'}]\n}\n\nreturn (\n<>\n     \n    <div className={`shiftblock-container ${className}`}> \n    <div className='shiftblock-subcontainer-starttime time'>{startTime}</div>\n\n        <div className='shiftblock-subcontainer-emp'>\n\n            {workersToDisplay.map((worker) => (\n                 <Employee key={uuid()} name={worker.name} group={colorKeys[colorNum]}></Employee>\n            ))}\n\n        </div>\n\n    <div className=\"time\">{endTime}</div>\n    </div>       \n</>\n\n\n\n)\n\n};\n\nexport default ShiftBlock;","import React from \"react\";\nimport \"./Room.css\";\nimport ShiftBlock from \"./ShiftBlock\";\nimport { useSelector } from \"react-redux\";\nimport uuid from \"react-uuid\";\n\nconst Room = ({roomNum,aShift,bShift, roomData}) => {\n\n    // 1 = a = red;\n    // 2 = b = blue;\n    // 3 = c = yellow;\n    // 4 = d = green;\n\nlet lastShiftGroup = useSelector(st => st.yesterdayShift);\n\nconst numKeys = {\n    A: 1,\n    B: 2,\n    C: 3,\n    D: 4\n}\n\nconst hours = {\n    amStart: '7:00 AM',\n    amEnd:'12:00 PM',\n    pmStart: '12:00 PM',\n    pmEnd: '5:30 PM'\n}\n\nlet rows = [];\nfor (let i = 0; i < 5; i++) {\n\n    if (lastShiftGroup === 'B') {\n\n        rows.push(<div key={uuid()} className='shiftblock-container-ampm'>\n        <ShiftBlock className='amshiftblock' colorNum={numKeys[aShift.am]} startTime={hours.amStart} endTime={hours.amEnd}></ShiftBlock>\n\n        <ShiftBlock className='pmshiftblock'  colorNum={numKeys[aShift.pm]} startTime={hours.pmStart} endTime={hours.pmEnd}></ShiftBlock>\n        </div>)\n\n        lastShiftGroup = 'A';\n\n    }\n\n    else {\n        rows.push(    <div key={uuid()} className='shiftblock-container-ampm'>\n        <ShiftBlock className='amshiftblock' colorNum={numKeys[bShift.am]} startTime={hours.amStart} endTime={hours.amEnd}></ShiftBlock>\n        <ShiftBlock className='pmshiftblock' colorNum={numKeys[bShift.pm]} startTime={hours.pmStart} endTime={hours.pmEnd}></ShiftBlock>\n        </div>);\n\n        lastShiftGroup = 'B';\n    }\n    ;\n  }\n\nreturn (\n\n    <div className='room-container'>\n        <div className='room-container-roomnum-container'>\n            <div className={`room-container-roomnum room${roomNum}`}>ROOM {roomNum}</div>\n       </div>\n\n       <div className='room-container-notes'>\n           <h2>ROOM DETAILS</h2>\n           {roomData.notes}\n        </div>\n\n       <div className='room-rows'>\n           {rows}\n       </div>\n       \n\n    </div>\n\n\n)\n\n}\n\n\nexport default Room;","\nimport axios from 'axios';\n\nconst API_URL = \"https://app.fakejson.com/q\";\n\n\n\nexport function getSchedule(requestedPayload) {\n  \n  //dispatch (can be called anything) is the dispatch function being exposed by thunk middleware\n  //dispatch needs to be passed into the async func to be called\n  return async function (dispatch) {\n    try {\n     \n      const response = await axios.post(API_URL, requestedPayload);\n      const arrayFromRes = response.data;\n      const withinHours = withinBusinessHours();\n      console.log('response from api is', arrayFromRes)\n\n      if (withinHours) {\n        dispatch(gotNewData(arrayFromRes))\n        \n      }\n      \n      else if(!withinHours) {\n\n          dispatch(closeBiz());\n      }\n\n    } \n    \n    catch (e) {\n      dispatch(gotError(e))\n    }\n  }\n}\n\nfunction gotNewData(schedule) {\n  return {\n    type: 'UPDATE_SCHEDULE',\n    data: schedule\n  }\n}\n\nfunction gotError(error) {\n  \n    throw new Error('API call did not work');\n}\n\nexport function closeBiz() {\n    return {\n        type: 'UPDATE_BUSINESS_CLOSE',\n        isDaycareOpen: false\n    }\n}\n\n\nexport function withinBusinessHours() {\n    \n    const startHourInAM = 7;\n    const endHourInPM = 17;\n    const endMinutesInPM = 30;\n\n    const date = new Date();\n    const day = date.getDay();\n    const isWeekday = day > 0 && day < 6 ? true : false;\n\n    if (!isWeekday) return false;\n\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n\n    let isWithinHours;\n\n    if (hour >= startHourInAM && hour <= endHourInPM) {\n\n        if (hour === endHourInPM && minutes >= endMinutesInPM) {\n            isWithinHours = false;\n        }\n\n        else {\n            isWithinHours = true;\n        }\n    }\n    return isWithinHours;\n    \n\n}\n\n","import React from \"react\";\nimport \"./DayHeaders2.css\";\n// import moment from 'moment';\nimport uuid from 'react-uuid'\n\n\n\n\nconst DayHeaders2 = () => {\n\n    //static obj but can be retrieved through API in future\n\n    const nextWorkingDays = [\n        {'day': 'Monday',\n         'date': 23,\n         'month': 8  },\n         {'day': 'Tuesday',\n         'date': 24,\n         'month': 8  },\n         {'day': 'Wednesday',\n         'date': 25,\n         'month': 8  },\n         {'day': 'Thursday',\n         'date': 26,\n         'month': 8  },\n         {'day': 'Friday',\n         'date': 27,\n         'month': 8  },\n         \n    ]\n    //BELOW CODE CAUSING BUGS. ISSUE WITH MOMENT JS? DAYJS also caused same issue\n    //app will not load in browser. loading circle forever despite succesful compilation.no errors in console for Chrome. Firefox displays TypeError\n    //error was TypeError b is undefined. in index.js. connected to redux\n\n    // let next5WorkingDays = [];\n    // let cur = moment();\n\n    // const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n\n    // while (next5WorkingDays.length < 5) {\n    \n    //     let dayIs = cur.format('dddd');\n    //     //if its a weekday. Sunday 0. Saturday is 6\n    //     if (daysOfWeek.indexOf(dayIs) >=0 ) {\n    //         console.log('inside here');\n    //         let moDate = cur.format(\"M[/]YY\")\n    //         let workingDay = {'day':dayIs, 'monthDate': moDate}\n\n    //         next5WorkingDays.push(workingDay);\n\n    //         cur = moment().add(1, 'd');\n    //     }\n\n    // }    \n\n    return (\n\n        <div className='dayheader-container'>\n           \n            <div className='days-container' >\n                {nextWorkingDays.map((dayElem) => (\n                   <div key={uuid()} className='wholeday-container'>\n\n                        <div className='day-container'>\n                        {dayElem.day}\n                        </div>\n\n                        <div>\n                        {`${dayElem.month}/${dayElem.date}`}   \n                        </div>\n\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n\n}\n\nexport default DayHeaders2;","import React, { useEffect } from \"react\";\nimport Room from \"./Room.js\";\nimport \"./AllRooms.css\";\nimport { getSchedule } from \"./actionCreators\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { setIntervalAsync } from 'set-interval-async/dynamic';\nimport { clearIntervalAsync } from 'set-interval-async'\nimport DayHeaders2 from \"./DayHeaders2.js\";\n\n//payload is the contains auth token to get dummy info from fakeJSON.com site\n//return is an array of person objects, has 10 elements\nconst payload = {\n    \"token\": \"apbFv44NakazHojFbikJLw\",\n    \"data\": { \n    \"name\": \"nameFirst\",\n    \"working\": \"numberBool\",\n    \"group\": \"numberInt|1,4\",\n    \"_repeat\": 8\n    }\n  };\n\nconst AllRooms = () => {\n\n    //callToStore allows usage of dispatch() directly\n    const callToStore = useDispatch();\n\n    //two variables below check the values intervalID and isDaycareOpen\n    //from the redux store\n    let intervalIDFromStore = useSelector(state => state.intervalID, shallowEqual);\n\n    let isOpenFromStore = useSelector(state => state.isDaycareOpen, shallowEqual);\n\n    \n  \n   \n    useEffect(() => {\n    \n            //when callToStore is run, dispatch is run within that func\n            //getSchedule calls dispatch \n            //dispatch within getSchedule is to update state with response received\n            //this is first call to the API upon start of app\n            callToStore(getSchedule(payload));\n\n            //below is an async interval to run throughout the day\n            let startIntervalID = setIntervalAsync(() => {               \n                callToStore(getSchedule(payload))}    \n                , 300000);\n\n            //change interval to 5 min 300,000 milsecs\n\n            //adding the newly created intervalID to state store\n            //argument passed in is the action object to be received by rootReducer\n            callToStore({type:'UPDATE_INTERVAL_ID', intervalID: startIntervalID })\n\n          return (\n              clearInterval(startIntervalID)\n          )\n      \n    }, [callToStore])  \n\n    //callToStore added as dependency of useEffect for stability. runs once.\n\n    useEffect(() => {\n        if (!isOpenFromStore) {\n            clearIntervalAsync(intervalIDFromStore);\n        }\n       \n    }, [isOpenFromStore, intervalIDFromStore])\n\n\n    //variables needed by room - room number, shiftblock start and end times, \n    //shiftblock colors\n \n    \n    // 1 = a = red;\n    // 2 = b = blue;\n    // 3 = c = yellow;\n    // 4 = d = green;\n\n    //static variables but can be drawn from API in future\n    const room1Data = {\n       notes: \"Under 5 years old\"\n    }\n    const room2Data = \n    {\n        notes: 'Over 5 years old'\n    }\n\n\nreturn (\n\n    <>\n        <div className='allrooms-container'>\n        <DayHeaders2></DayHeaders2>\n        <Room roomNum='1' aShift={{am:'A',pm:'A'}} bShift={{am:'B',pm:'B'}} roomData={room1Data}> </Room>\n\n        <Room roomNum='2' aShift={{am:'A',pm:'B'}} bShift={{am:'C',pm:'D'}} roomData={room2Data}>this is a room</Room>\n        </div>\n    </>\n\n\n)\n\n}\n\n\nexport default AllRooms;","import React, {useState, useEffect} from \"react\";\nimport moment from 'moment';\nimport './Clock.css';\n\n\nconst Clock = () => {\n\n\n    let timeNow = moment().format('LTS'); \n    const [clock, updateClock] = useState(timeNow);\n\n    useEffect(() => {\n\n        const timerID = setInterval(() => {\n            updateClock(moment().format('LTS'))\n\n        },1000)\n\n        return () => clearInterval(timerID);\n\n    }, [])\n\n    return (\n        <div className=\"clock-container\">\n            <div className='clock-date'>{moment().format(\"MMMM D YYYY\")}</div>\n            <div className='clock'>{clock}</div>\n\n\n        </div>\n        \n\n\n    )\n\n\n}\n\n\nexport default Clock;","\nimport AllRooms from './AllRooms';\nimport Clock from \"./Clock\";\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Clock></Clock>\n      <AllRooms></AllRooms>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\nconst INITIAL_STATE = {\n    \"data\": [\n    {\n    \"name\": \"Sam\",\n    \"working\": true,\n    'group': 1\n    },\n    {\n    \"name\": \"Mary\",\n    \"working\": true,\n    'group': 2\n    },\n    \n    {\n    \"name\": \"Alexio\",\n    \"working\": true,\n    'group': 3\n        },\n\n    {\n    \"name\": \"Andrew\",\n    \"working\": true,\n    'group': 4\n         }\n    ],\n    'isDaycareOpen': true,\n    'intervalID': null,\n    'yesterdayShift': 'B'\n    };\n\n\nfunction rootReducer(state=INITIAL_STATE, action) {\n\n    switch(action.type) {\n\n        case 'UPDATE_SCHEDULE':\n            //just replacing the state object with new data from api.\n            const date = new Date();\n            const hour = date.getHours();\n            const minutes = date.getMinutes();\n            \n            console.log('inside update schedule');\n            console.log('current time is', hour, minutes)\n            \n            return { ...state, data: action.data};\n\n        case 'UPDATE_BUSINESS_CLOSE':\n   \n            return {...state, isDaycareOpen: action.isDaycareOpen };\n\n        case 'UPDATE_INTERVAL_ID':\n\n            return {...state, intervalID: action.intervalID};\n\n        default:\n            return state;\n    }\n\n}\n\n\n  export default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './rootReducer';\nimport {Provider} from 'react-redux';   \nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n    && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\n\nReactDOM.render(\n  \n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}